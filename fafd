--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.5) ~  Much Love, Ferib 

]]--

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v20)if (v1(v20,2)==79) then v19=v0(v3(v20,1,1));return "";else local v69=v2(v0(v20,16));if v19 then local v77=v5(v69,v19);v19=nil;return v77;else return v69;end end end);local function v21(v22,v23,v24)if v24 then local v70=(v22/((2 + 0 + 0)^(v23-(991 -(295 + 695)))))%(((340 + 455) -(585 + 208))^(((v24-((6986 -5170) -(1677 + (947 -(619 + 190))))) -(v23-(1 + 0))) + 1 + 0)) ;return v70-(v70%(1 + 0)) ;else local v71=(2 -0)^(v23-1) ;return (((v22%(v71 + v71))>=v71) and 1) or (1770 -(1196 + 574)) ;end end local function v25()local v38=0 -(1161 -(196 + 965)) ;local v39;while true do if (v38==(209 -((1957 -(187 + 1584)) + (33 -11)))) then return v39;end if (v38==(0 + 0)) then v39=v1(v16,v18,v18);v18=v18 + (2 -1) ;v38=1 + 0 ;end end end local function v26()local v40=0 + 0 ;local v41;local v42;while true do if (v40==(0 -0)) then v41,v42=v1(v16,v18,v18 + (1760 -(1532 + 226)) );v18=v18 + 2 ;v40=1103 -((1786 -949) + 265) ;end if (v40==((1754 -(69 + 193)) -(379 + 1112))) then return (v42 * (245 + 11)) + v41 ;end end end local function v27()local v43=0 + 0 ;local v44;local v45;local v46;local v47;while true do if (v43==((359 -(153 + 206)) -0)) then v44,v45,v46,v47=v1(v16,v18,v18 + (6 -3) );v18=v18 + (8 -(909 -(334 + 571))) ;v43=2 -1 ;end if (v43==(1 + 0)) then return (v47 * (16779165 -((1026 -(531 + 437)) + (3281 -(1139 + 251))))) + (v46 * (8946 + 56590)) + (v45 * (1092 -836)) + v44 ;end end end local function v28()local v48=v27();local v49=v27();local v50=2 -1 ;local v51=(v21(v49,2 -(1 -0) ,20) * ((7 -5)^(557 -(303 + 222)))) + v48 ;local v52=v21(v49,18 + 3 ,1480 -(478 + 971) );local v53=((v21(v49,8 + 24 )==(3 -2)) and  -((1161 -(196 + 94)) -(300 + 570))) or (1 + 0) ;if (v52==(0 -0)) then if (v51==(0 + 0 + 0)) then return v53 * (1455 -((1244 -(228 + 14)) + 453)) ;else local v78=0 + 0 ;while true do if (v78==0) then v52=1;v50=(0 + 0) -0 ;break;end end end elseif (v52==(851 + 1196)) then return ((v51==((3493 -(1234 + 462)) -(1185 + 612))) and (v53 * (1/(505 -(467 + 38))))) or (v53 * NaN) ;end return v8(v53,v52-(1280 -(189 + 68)) ) * (v50 + (v51/((1237 -(787 + 448))^(35 + 13 + 4)))) ;end local function v29(v30)local v54=0;local v55;local v56;while true do if (((1379 -(195 + 1180)) -3)==v54) then v55=v3(v16,v18,(v18 + v30) -(1367 -(101 + 1265)) );v18=v18 + v30 ;v54=1 + 1 ;end if (v54==((0 -0) + 0)) then v55=nil;if  not v30 then v30=v27();if (v30==(661 -(317 + 344))) then return "";end end v54=1 + 0 ;end if (v54==((18 -14) -2)) then v56={};for v79=807 -(747 + (196 -137)) , #v55 do v56[v79]=v2(v1(v3(v55,v79,v79)));end v54=11 -8 ;end if (v54==(8 -5)) then return v6(v56);end end end local v31=v27;local function v32(...)return {...},v12("#",...);end local function v33()local v57=0 -0 ;local v58;local v59;local v60;local v61;local v62;local v63;local v64;while true do if (v57~=0) then else local v72=1832 -(1225 + 607) ;while true do if (v72==0) then v58=0 + 0 ;v59=nil;v72=2 -1 ;end if (v72==(440 -(235 + 204))) then v57=1 + 0 ;break;end end end if (v57==1) then local v73=0;while true do if ((2 -1)~=v73) then else v57=2;break;end if (v73==0) then v60=nil;v61=nil;v73=1;end end end if (v57~=(4 -2)) then else v62=nil;v63=nil;v57=1734 -(149 + 1582) ;end if (v57~=3) then else v64=nil;while true do local v81=0;while true do if (v81~=0) then else if (v58~=(1 + 0)) then else local v98=0 + 0 ;while true do if (v98==2) then v58=2;break;end if (v98==1) then for v112=1,v63 do local v113=0 + 0 ;local v114;local v115;local v116;local v117;local v118;while true do if (v113==(0 + 0)) then v114=0;v115=nil;v113=1;end if (v113~=(1886 -(291 + 1593))) then else v118=nil;while true do if (v114~=1) then else v117=nil;v118=nil;v114=1552 -(608 + 942) ;end if (v114~=0) then else v115=0;v116=nil;v114=2 -1 ;end if (v114==(1541 -(205 + 1334))) then while true do if ((1139 -(1015 + 123))==v115) then v118=nil;while true do if (v116~=(1005 -(6 + 999))) then else local v140=0 + 0 ;while true do if (0~=v140) then else local v222=0;while true do if (v222==(1727 -(702 + 1025))) then v117=v25();v118=nil;v222=1;end if (v222==(213 -(198 + 14))) then v140=1;break;end end end if (1==v140) then v116=1 + 0 ;break;end end end if (v116==1) then if (v117==(2 -1)) then v118=v25()~=0 ;elseif (v117==(1 + 1)) then v118=v28();elseif (v117==3) then v118=v29();end v64[v112]=v118;break;end end break;end if (v115==(0 + 0)) then local v133=0 + 0 ;while true do if ((500 -(380 + 119))==v133) then v115=1;break;end if (v133==0) then v116=0;v117=nil;v133=1;end end end end break;end end break;end if (v113==1) then v116=nil;v117=nil;v113=727 -(439 + 286) ;end end end v62[3]=v25();v98=1 + 1 ;end if (v98==(295 -(202 + 93))) then v63=v27();v64={};v98=1384 -(1329 + 54) ;end end end if (v58==(1 + 1)) then local v99=0;while true do if (v99==1) then for v119=1,v27() do v61[v119]=v27();end return v62;end if (v99~=0) then else for v121=1,v27() do local v122=0 -0 ;local v123;local v124;local v125;while true do if (v122==0) then v123=0;v124=nil;v122=1 -0 ;end if (v122~=1) then else v125=nil;while true do if (v123~=0) then else v124=1539 -(1212 + 327) ;v125=nil;v123=917 -(878 + 38) ;end if (v123~=1) then else while true do if (v124~=0) then else v125=v25();if (v21(v125,3 -2 ,1139 -(133 + 1005) )==(0 -0)) then local v136=0;local v137;local v138;local v139;while true do if (v136==1) then local v214=0 -0 ;local v215;while true do if (v214==(1456 -(328 + 1128))) then v215=0;while true do if (v215==1) then v136=2 + 0 ;break;end if (v215==0) then v139={v26(),v26(),nil,nil};if (v137==(0 -0)) then local v278=0;local v279;while true do if (v278~=(1288 -(1074 + 214))) then else v279=0;while true do if (0==v279) then v139[3]=v26();v139[4]=v26();break;end end break;end end elseif (v137==(1 + 0)) then v139[2 + 1 ]=v27();elseif (v137==(198 -(34 + 162))) then v139[3]=v27() -(2^16) ;elseif (v137~=3) then else local v299=0;local v300;while true do if (v299==(0 + 0)) then v300=0 -0 ;while true do if (v300~=(0 -0)) then else v139[3]=v27() -((9 -7)^(22 -6)) ;v139[4]=v26();break;end end break;end end end v215=2 -1 ;end end break;end end end if ((1695 -(960 + 732))==v136) then if (v21(v138,3 -0 ,3)~=1) then else v139[4]=v64[v139[585 -(524 + 57) ]];end v59[v121]=v139;break;end if (v136==2) then local v217=0;while true do if (0~=v217) then else local v244=1620 -(1190 + 430) ;while true do if (v244~=(0 -0)) then else if (v21(v138,1 + 0 ,1977 -(288 + 1688) )~=1) then else v139[1382 -(627 + 753) ]=v64[v139[2]];end if (v21(v138,233 -(17 + 214) ,2)~=1) then else v139[3]=v64[v139[2 + 1 ]];end v244=1 + 0 ;end if (v244==1) then v217=1 + 0 ;break;end end end if (v217==1) then v136=555 -(30 + 522) ;break;end end end if (v136==0) then local v218=1657 -(400 + 1257) ;while true do if (v218~=(1998 -(602 + 1395))) then else v136=1;break;end if (v218==(0 + 0)) then local v245=0;while true do if (v245==1) then v218=1314 -(128 + 1185) ;break;end if (0~=v245) then else v137=v21(v125,1622 -(1050 + 570) ,1847 -(1593 + 251) );v138=v21(v125,4 + 0 ,4 + 2 );v245=1 + 0 ;end end end end end end end break;end end break;end end break;end end end for v126=1,v27() do v60[v126-(1 + 0) ]=v33();end v99=1;end end end v81=1 + 0 ;end if (v81==(1 + 0)) then if (v58==(1037 -(803 + 234))) then local v100=0 + 0 ;local v101;while true do if (v100~=(0 -0)) then else v101=0;while true do if (v101~=(1 + 0)) then else local v128=0 + 0 ;while true do if (v128==(0 -0)) then v61={};v62={v59,v60,nil,v61};v128=1 + 0 ;end if (v128~=1) then else v101=761 -(548 + 211) ;break;end end end if (v101==2) then v58=1;break;end if ((0 + 0)==v101) then local v129=0 -0 ;while true do if (1==v129) then v101=659 -(86 + 572) ;break;end if (v129==0) then v59={};v60={};v129=1;end end end end break;end end end break;end end end break;end end end local function v34(v35,v36,v37)local v65=0;local v66;local v67;local v68;while true do if (v65==0) then v66=v35[1];v67=v35[2];v65=1;end if (v65==1) then v68=v35[3];return function(...)local v82=0;local v83;local v84;local v85;local v86;local v87;while true do if (v82==0) then v83=1;v84= -1;v82=1;end if (v82==2) then v87=nil;v87=function()local v88=v66;local v89=v67;local v90=v68;local v91=v32;local v92={};local v93={};local v94={};for v102=1015 -(765 + 250) ,v86 do if ((v102>=v90) or ((5156 -(670 + 1260))<=(4779 -(558 + 1060)))) then v92[v102-v90 ]=v85[v102 + 1 ];else v94[v102]=v85[v102 + 1 ];end end local v95=(v86-v90) + (1445 -(421 + 1023)) ;local v96;local v97;while true do local v103=355 -(103 + 252) ;local v104;while true do if ((0==v103) or ((1892 + (2660 -(323 + 1455)))<=(834 + 1292))) then v104=(1178 -(1165 + 13)) -0 ;while true do if ((((9148 -(1070 + 641)) -3967)==(4377 -(419 + 38 + (1702 -(601 + 651))))) and (v104==(0 -0))) then local v130=0;while true do if (((2978 + 1954)>1779) and (v130==(764 -(62 + 702)))) then v96=v88[v83];v97=v96[1];v130=1;end if (((1 -(0 + 0))==v130) or ((1400 -(1173 + (285 -185)))==((6745 -(92 + 108)) -4575))) then v104=1 + 0 ;break;end end end if ((2500<2547) and (v104==(1 -0))) then if (((1380 -(727 + 237))==(547 -(84 + 47))) and (v97<=14)) then if (((5056 -(1778 + 37))<=(5499 -((2364 -(131 + 1269)) + 147))) and (v97<=6)) then if ((v97<=((4317 -2316) -(1189 + 810))) or ((3179 -(1614 + 65))>=(7333 -3615))) then if ((v97<=(257 -(192 + 65))) or (((5132 -(292 + 294)) -(352 + 116))>=4246)) then v94[v96[8 -6 ]]=v96[3];elseif ((v97==(352 -(348 + 3))) or (1284==2437)) then v94[v96[2]]=v94[v96[3 + 0 ]];else local v144=927 -(731 + 196) ;local v145;local v146;local v147;local v148;local v149;while true do if ((v144==0) or ((2743 -(34 + 6 + 4))>=(5971 -(242 + 94 + 1095)))) then v145=1946 -(1818 + 128) ;v146=nil;v144=1 -0 ;end if ((((3257 -2382) -396)==479) and (v144==(1668 -((907 -434) + (2805 -(188 + 1424)))))) then v149=nil;while true do if ((v145==2) or ((5003 -(1189 + 354))>(5120 -(126 + 347)))) then for v263=v146,v84 do local v264=0 + 0 ;local v265;while true do if ((((35501 -27751) -4737)>2960) and (v264==0)) then v265=0 -0 ;while true do if (((458 + 56)>=(180 + 45)) and ((0 + 0)==v265)) then v149=v149 + (1 -(0 + 0)) ;v94[v263]=v147[v149];break;end end break;end end end break;end if ((923>=88) and (v145==((6736 -4762) -(1267 + 707)))) then local v247=0 -(0 -0) ;while true do if (((5218 -1953)>(2085 -(1146 + 621))) and (v247==(1 + 0))) then v145=2 -1 ;break;end if ((v247==(0 -0)) or (2371<(988 + 1059))) then v146=v96[4 -2 ];v147,v148=v91(v94[v146](v13(v94,v146 + 1 + 0 ,v96[3])));v247=1112 -(421 + 690) ;end end end if ((v145==(1 + 0)) or (3085<(1540 -435))) then local v248=0 + 0 ;while true do if ((v248==0) or ((5045 -(159 + 660))<(1316 -(377 + 247)))) then v84=(v148 + v146) -(1339 -(746 + 592)) ;v149=0 + 0 ;v248=1171 -(965 + 205) ;end if ((v248==((985 -(633 + 66)) -(48 + 237))) or ((52 + 1667)>((3588 + 6989) -5691))) then v145=1569 -(1501 + 66) ;break;end end end end break;end if ((v144==(1 + 0)) or ((18106 -13231)<=(2999 -((1389 -838) + 716)))) then v147=nil;v148=nil;v144=2;end end end elseif (((3459 -(417 + 253))<(4755 -(59 + 935))) and (v97<=(1 + 3))) then if (((4209 + 388)>(5437 -(697 + 859))) and (v97>(1 + 2))) then v94[v96[2 -0 ]][v96[2 + 1 ]]=v96[4 + 0 + 0 ];else v94[v96[1 + 1 ]]={};end elseif ((v97==(24 -19)) or (4069>((5653 -3043) + 1936))) then local v153=0 + 0 ;local v154;local v155;while true do if ((v153==1) or (747>(2338 + 259))) then while true do if ((v154==(0 -0)) or ((4286 -(27 + 353))>=(5577 -(867 + 320)))) then v155=v96[2 -0 ];v94[v155]=v94[v155](v13(v94,v155 + (1 -0) ,v84));break;end end break;end if ((v153==(0 -0)) or ((5947 -(1291 + 346))==(819 + 697 + 2042))) then v154=0 -0 ;v155=nil;v153=1 + 0 ;end end else local v156=0 + 0 ;local v157;while true do if (((10451 -6931)==((30653 -18813) -8320)) and (v156==(0 + 0))) then v157=v96[2];v94[v157]=v94[v157](v13(v94,v157 + (1845 -(603 + 1241)) ,v96[599 -(330 + 266) ]));break;end end end elseif (((5056 -(115 + (99 -(28 + 57))))==(6452 -(1491 + 34))) and (v97<=10)) then if (((6938 -4331)==(4912 -2305)) and (v97<=(3 + 5))) then if (((6886 -3581)>=(11456 -8496)) and (v97>(1481 -((4048 -3031) + 457)))) then v94[v96[2]]=v96[3 + 0 ]~=(1291 -(1065 + 226)) ;else local v159=(1222 -(401 + 30)) -(373 + 418) ;local v160;local v161;local v162;local v163;while true do if (((2597 -((1035 -(530 + 148)) + 1303))<1719) and (v159==(40 -(37 + 1)))) then while true do if ((v160==1) or (1761<=(1994 -(329 + 87)))) then v163=1718 -(1245 + (1273 -(477 + 323))) ;for v266=v161,v96[4] do local v267=0 -0 ;local v268;while true do if ((v267==(1335 -(737 + 598))) or ((1176 -(638 + 275))>(3972 + (1307 -(409 + 464))))) then v268=0;while true do if ((v268==(1872 -(1320 + 552))) or (((10981 -6101) -(43 + 458))<=137)) then v163=v163 + 1 ;v94[v266]=v162[v163];break;end end break;end end end break;end if (((351 + 746 + 1974)==(307 + 2764)) and (v160==0)) then v161=v96[2 + 0 ];v162={v94[v161](v13(v94,v161 + 1 + 0 + 0 ,v84))};v160=1 + 0 ;end end break;end if ((v159==(1 + 0)) or ((527 + 302)<=814)) then v162=nil;v163=nil;v159=2 + 0 ;end if ((v159==(0 -0)) or (3790>=(5068 -(409 + 443)))) then v160=0 -0 ;v161=nil;v159=1 + 0 ;end end end elseif ((v97>(15 -6)) or ((1307 + 955)>(2488 + 2183))) then local v164=(2587 -(119 + 1830)) -(568 + 70) ;local v165;local v166;local v167;local v168;local v169;while true do if ((v164==((184 -88) -(87 + 8))) or ((3554 -(286 + 1643))>(8935 -4959))) then v167=v165 + 2 ;v168={v94[v165](v94[v165 + (86 -(60 + 25)) ],v94[v167])};v164=2;end if (((793 -370)==423) and (v164==3)) then if (v169 or ((5948 -4398)==(4911 -(694 + 1302)))) then local v246=0 + 0 ;while true do if ((v246==(0 + 0)) or ((13184 -9829)<(2396 -(147 + 1028)))) then v94[v167]=v169;v83=v96[3];break;end end else v83=v83 + (1 -0) ;end break;end if (((381 + 2084)<((139 + 5788) -(668 + 428))) and (v164==(6 -4))) then for v237=2 -(570 -(137 + 432)) ,v166 do v94[v167 + v237 ]=v168[v237];end v169=v168[1 + 0 ];v164=9 -6 ;end if ((v164==(1193 -((2175 -1340) + 358))) or ((2191 -(1001 + 413))>=(8319 -6613))) then local v226=(0 -0) -0 ;while true do if ((v226==(1439 -(990 + 426 + 23))) or ((1468 + 594)<(5724 -3797))) then v165=v96[2];v166=v96[1 + 3 ];v226=1;end if (((492 -127)>(1557 -(79 + 1422))) and (v226==((2 + 1) -2))) then v164=2 -1 ;break;end end end end else v83=v96[4 -(199 -(184 + 14)) ];end elseif (((3178 -(415 + 1556))==(2161 -(590 + 364))) and (v97<=(6 + 6))) then if (((1199 -(496 + 72))<(28 + 4324)) and (v97==11)) then local v171=0 + 0 ;local v172;local v173;while true do if ((266<=(42 + 628 + 240)) and (v171==(0 + 0))) then local v227=0 -0 ;while true do if ((v227==(0 + 0)) or (692>(6672 -3059))) then v172=v96[2 + 0 ];v173=v94[v172];v227=(254 + 767) -(865 + 155) ;end if (((6765 -2859)>(7086 -3646)) and (v227==1)) then v171=3 -2 ;break;end end end if (((2194 -(1053 + 807))<((752 -333) + 7)) and (v171==(2 -1))) then for v240=v172 + (1 -0) ,v84 do v7(v173,v94[v240]);end break;end end else local v174=0;local v175;local v176;local v177;while true do if (((9556 -(6321 -(782 + 67)))<=((13416 -(429 + 1201)) -7531)) and (v174==(0 + 0))) then v175=0;v176=nil;v174=1064 -(207 + 856) ;end if ((v174==(1 + 0)) or ((2047 + 2384)<=(3078 + 241))) then v177=nil;while true do if ((v175==(0 -0)) or (770>(1861 -830))) then v176=54 -(34 + 20) ;v177=nil;v175=121 -((314 -229) + 35) ;end if (((1330 -(389 + 603))>(1549 -(717 + 700))) and (v175==(1 + (0 -0)))) then while true do if ((2266>=(980 -473)) and ((0 + 0)==v176)) then v177=v96[1527 -(604 + 921) ];v94[v177]=v94[v177](v94[v177 + 1 + 0 ]);break;end end break;end end break;end end end elseif ((v97==((1529 -(828 + 697)) + 9)) or (4291<=(12605 -9619))) then v94[v96[2 -0 ]]=v34(v89[v96[833 -(117 + 713) ]],nil,v37);elseif (((1653 + 2339)>=2129) and (v96[2 -0 ]==v94[v96[100 -(46 + 50) ]])) then v83=v83 + (1 -0) ;else v83=v96[5 -2 ];end elseif ((v97<=(986 -(580 + 384))) or (962>=1421)) then if (((1675 -(442 + (1753 -(224 + 852))))<(2357 + 1219)) and (v97<=((1453 -(142 + 1297)) + 4))) then if (((8530 -5419)>=(615 + 438)) and (v97<=16)) then if ((v97>((917 -(116 + 767)) -19)) or ((3624 -(354 + 118))==(790 + 881))) then v94[v96[2 + 0 ]][v96[3]]=v94[v96[(176 -(14 + 160)) + 2 ]];else v94[v96[1835 -(1310 + 523) ]]=v37[v96[9 -6 ]];end elseif ((v97>(30 -13)) or ((3100 -(261 + 589))>(6467 -(337 + 1588)))) then v37[v96[2 + 1 ]]=v94[v96[5 -3 ]];else do return;end end elseif ((v97<=(1340 -(182 + 1138))) or ((5821 -2708)>=3776)) then if (((3189 -(28 + 97))<(4685 -(295 + 900))) and (v97==19)) then local v185=1071 -(172 + 899) ;local v186;local v187;local v188;local v189;while true do if ((((34 -22) + (5320 -1339))>(309 + (3476 -(1180 + 346)))) and (v185==1)) then local v228=0 + 0 ;while true do if ((v228==(1 + 0)) or ((5772 -(196 + 1701))<=(448 + 823))) then v185=2 -0 ;break;end if (((0 -0)==v228) or ((1022 + 1520 + 1871)<(13430 -(19531 -10213)))) then v84=(v188 + v186) -1 ;v189=0;v228=3 -2 ;end end end if ((v185==(5 -(1890 -(219 + 1668)))) or (((3763 + 689) -(60 + (385 -(171 + 110))))>=(5539 -(706 + 398)))) then for v241=v186,v84 do local v242=0 + (0 -0) ;local v243;while true do if (((569 -351)<(1526 -(203 + (52 -28)))) and (0==v242)) then v243=0 + 0 + 0 ;while true do if ((0==v243) or ((1888 -(338 + 355))>((9105 + 955) -5333))) then v189=v189 + 1 + (0 -0) ;v94[v241]=v187[v189];break;end end break;end end end break;end if ((v185==(0 -0)) or ((867 + 211)>1507)) then local v229=789 -(616 + 173) ;while true do if (((5636 -3662)<=(1577 + 2430)) and (v229==(1782 -(1724 + 57)))) then v185=1 -0 ;break;end if (((1150 + 312 + 1086)<(169 + 84 + 2331)) and (v229==(0 -(0 + 0)))) then v186=v96[2];v187,v188=v91(v94[v186](v13(v94,v186 + 1 ,v84)));v229=1 + 0 ;end end end end elseif (((1343 -565)<2532) and (v94[v96[7 -5 ]]==v96[5 -1 ])) then v83=v83 + 1 + (0 -0) ;else v83=v96[336 -(198 + 135) ];end elseif ((v97>(61 -40)) or ((2410 -(203 + 791))==((1368 -975) + 1794))) then v94[v96[7 -5 ]]=v94[v96[3]][v96[1 + 3 ]];else v94[v96[2]]();end elseif (((7833 -6202)<(8698 -4649)) and (v97<=(5 + 21))) then if ((v97<=(8 + 16)) or (((5130 -(547 + 406)) -(175 + 373))>=(5349 -(361 + 781)))) then if ((3946>=(2115 -((808 -567) + 40))) and (v97>(19 + 4))) then local v192=0 + 0 ;local v193;local v194;local v195;while true do if (((4782 -(70 + 1529))>(896 + 1321)) and (1==v192)) then v195=nil;while true do if ((v193==(1 + 0)) or (1330>=(5300 -2193))) then while true do if ((v194==(0 + 0)) or (1187==(13038 -9819))) then v195=v96[3 -1 ];v94[v195](v94[v195 + (1 -(0 -0)) ]);break;end end break;end if ((v193==(50 -(32 + 18))) or ((89 + 3303)<=(4068 -((1756 -1139) + 968)))) then v194=0 -0 ;v195=nil;v193=903 -(13 + 2 + (1126 -(144 + 95))) ;end end break;end if ((v192==(0 + 0 + 0)) or ((345 + 2034)<2099)) then v193=939 -(895 + 44) ;v194=nil;v192=1191 -(957 + 233) ;end end else local v196=0 -0 ;local v197;local v198;local v199;local v200;local v201;local v202;while true do if (((22 + 993)==1015) and (v196==((1 -0) + 2))) then while true do if ((v197==0) or ((7461 -5677)>=(857 + 1372))) then local v257=0;while true do if ((2336>1441) and (v257==1)) then v197=1 -(0 -0) ;break;end if (((5946 -2238)==(1115 + 2593)) and (v257==(0 -0))) then v198=0 + 0 ;v199=nil;v257=1;end end end if ((v197==(1 + 0)) or ((5293 -(775 + 66))<=(1236 -(166 + 665)))) then local v258=1978 -(1269 + 709) ;while true do if (((2373 -(978 + 137 + 23))==(3226 -1991)) and (v258==0)) then v200=nil;v201=nil;v258=(2 -1) + 0 + 0 ;end if (((9074 -6577)<=(12220 -7388)) and (v258==1)) then v197=1351 -(426 + 923) ;break;end end end if ((v197==(2 + 0)) or ((4019 -(56 + 6))==(5402 -(766 + 813)))) then v202=nil;while true do if ((v198==(124 -((1993 -(1537 + 369)) + 37))) or ((1149 + 1084)>=((6584 -(1208 + 324)) -(60 + 1303)))) then local v275=0 -0 ;while true do if (((982 + 1180)>(2745 -840)) and (v275==(1 + (0 -0)))) then v198=1 + 0 ;break;end if ((v275==0) or ((4232 -(800 + 1147))<=(3828 -(73 + 2140)))) then v199=v96[8 -6 ];v200,v201=v91(v94[v199](v94[v199 + 1 ]));v275=3 -2 ;end end end if ((v198==(4 -2)) or ((2193 -(446 + 159))==(955 -(45 + 127)))) then for v286=v199,v84 do local v287=0 -0 ;local v288;while true do if (((3491 -(601 + 3))<=(3931 + 7)) and (v287==(0 + (0 -0)))) then v288=0 -(1121 -(863 + 258)) ;while true do if (((3389 -2000)<=(594 + 1594)) and ((0 -0)==v288)) then v202=v202 + (4 -3) ;v94[v286]=v200[v202];break;end end break;end end end break;end if ((v198==1) or ((2006 -(289 + 1202))>=1922)) then local v276=0 + (776 -(102 + 674)) ;local v277;while true do if ((v276==(0 + 0)) or ((11547 -8087)<(1949 -1323))) then v277=0 -0 ;while true do if ((v277==(4 -3)) or ((1229 -(324 + 697))>=1516)) then v198=3 -1 ;break;end if (((6184 -(306 + 945))>(2973 + 1535)) and (v277==(0 -0))) then local v296=1135 -(601 + 534) ;while true do if (((106 + 719)<=(630 + 200)) and (1==v296)) then v277=1;break;end if ((v296==(0 + 0)) or ((62 + 44 + 381)>(8212 -5899))) then v84=(v201 + v199) -1 ;v202=0 -0 ;v296=1;end end end end break;end end end end break;end end break;end if ((4053<(13115 -8448)) and ((4 -3)==v196)) then v199=nil;v200=nil;v196=7 -5 ;end if ((4287>(963 -(227 + 125))) and (v196==((0 -0) + 0 + 0))) then v197=0;v198=nil;v196=1 + 0 ;end if ((v196==((2 + 1) -1)) or (2294==3880)) then v201=nil;v202=nil;v196=3;end end end elseif ((v97==25) or ((19127 -14198)<=(1326 -537))) then if (v94[v96[1958 -(37 + 1919) ]] or ((241 + 281)>=(5867 -3622))) then v83=v83 + 1 + 0 ;else v83=v96[3];end else v94[v96[1 + (1493 -(731 + 761)) ]]=v94[v96[4 -1 ]]/v96[4] ;end elseif (((1976 + 2987)>(4901 -(1616 + 167))) and (v97<=(379 -(134 + 190 + 27)))) then if ((v97>(1697 -(1410 + 260))) or (4248<=(1065 -(181 + 61)))) then for v212=v96[2],v96[12 -9 ] do v94[v212]=nil;end else local v204=633 -(78 + 555) ;local v205;local v206;while true do if (((14422 -10743)>=(2867 -1752)) and (v204==1)) then while true do if ((v205==(0 -0)) or ((120 + 2871)>=(1757 + 3134))) then v206=v96[1920 -((829 -(148 + 190)) + 1427) ];v94[v206]=v94[v206]();break;end end break;end if ((((1327 + 8200) -(3612 + 3291))>=2182) and ((0 + 0)==v204)) then v205=0 + 0 ;v206=nil;v204=369 -(329 + 39) ;end end end elseif (((3810 + 664)>2817) and (v97>(63 -34))) then local v207=0;local v208;local v209;while true do if ((1267==1267) and (v207==(1995 -(433 + 1562)))) then local v230=(2583 -944) -(183 + 1456) ;while true do if ((3261==((12288 -9512) + 485)) and (v230==(0 + 0))) then v208=v96[3 -1 ];v209=v94[v96[3 -0 ]];v230=1 + (1218 -(141 + 1077)) ;end if (((81 + 5)<=2874) and ((1 + 0)==v230)) then v207=1947 -(430 + 1082 + 434) ;break;end end end if (((599 + 777)<=(11645 -6707)) and (v207==((1 + 0) -0))) then v94[v208 + 1 ]=v209;v94[v208]=v209[v96[4 + 0 ]];break;end end else local v210=0;local v211;while true do if (((2593 + 195)<=(13093 -9319)) and (v210==(0 + 0))) then v211=v96[2];v94[v211](v13(v94,v211 + 1 ,v96[3]));break;end end end v83=v83 + (874 -(754 + 119)) ;break;end end break;end end end end;v82=3;end if (v82==3) then A,B=v32(v11(v87));if  not A[1] then local v105=0;local v106;while true do if (0==v105) then v106=v35[4][v83] or "?" ;error("Script error at ["   .. v106   .. "]:"   .. A[2] );break;end end else return v13(A,2,B);end break;end if (1==v82) then v85={...};v86=v12("#",...) -1 ;v82=2;end end end;end end end return v34(v33(),{},v17)(...);end vv9(),...);end
